//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/Player/ControlesPlayer.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @ControlesPlayer: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ControlesPlayer()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""ControlesPlayer"",
    ""maps"": [
        {
            ""name"": ""MoverPersonaje"",
            ""id"": ""6ac8d1e8-158b-421d-b12b-f31aa9086daf"",
            ""actions"": [
                {
                    ""name"": ""MoverPersonaje"",
                    ""type"": ""Value"",
                    ""id"": ""a74c02f0-98db-4f99-b799-607e0079237a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Atacar"",
                    ""type"": ""Button"",
                    ""id"": ""1c60bff6-8c8e-4d2b-aac4-d33db4f514e9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reiniciar"",
                    ""type"": ""Button"",
                    ""id"": ""2e416904-a46e-4520-b6b2-d00de50b798d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""a611b327-5d29-477a-a428-fe13fa676b71"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoverPersonaje"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f33575d7-e68a-41ce-892d-156478e51f75"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoverPersonaje"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""9522dc03-22a8-48a0-b40b-aa8b2e69ef4a"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoverPersonaje"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""04aa4654-51cc-44bc-940d-e4a1a9747d1b"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoverPersonaje"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""77794236-b55f-4ffe-9bed-0bc4c3c45117"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoverPersonaje"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""c8bb04c5-f452-4f3b-a685-e102a4b41516"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoverPersonaje"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""72646106-5d7e-4cdd-bec3-755032f3286e"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoverPersonaje"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a6a27099-3626-4bfc-8aab-7bac55dec616"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoverPersonaje"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8dd5d1c3-c8ae-4af9-be4c-cbc50663032f"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoverPersonaje"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""035ee1eb-b997-479e-bed2-4ad521866880"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoverPersonaje"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""a25a5f82-f420-477b-9a8b-bd9697a75cdf"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Atacar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f2d97645-9f37-4a03-aec8-7c96e4d18f88"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reiniciar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // MoverPersonaje
        m_MoverPersonaje = asset.FindActionMap("MoverPersonaje", throwIfNotFound: true);
        m_MoverPersonaje_MoverPersonaje = m_MoverPersonaje.FindAction("MoverPersonaje", throwIfNotFound: true);
        m_MoverPersonaje_Atacar = m_MoverPersonaje.FindAction("Atacar", throwIfNotFound: true);
        m_MoverPersonaje_Reiniciar = m_MoverPersonaje.FindAction("Reiniciar", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // MoverPersonaje
    private readonly InputActionMap m_MoverPersonaje;
    private List<IMoverPersonajeActions> m_MoverPersonajeActionsCallbackInterfaces = new List<IMoverPersonajeActions>();
    private readonly InputAction m_MoverPersonaje_MoverPersonaje;
    private readonly InputAction m_MoverPersonaje_Atacar;
    private readonly InputAction m_MoverPersonaje_Reiniciar;
    public struct MoverPersonajeActions
    {
        private @ControlesPlayer m_Wrapper;
        public MoverPersonajeActions(@ControlesPlayer wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoverPersonaje => m_Wrapper.m_MoverPersonaje_MoverPersonaje;
        public InputAction @Atacar => m_Wrapper.m_MoverPersonaje_Atacar;
        public InputAction @Reiniciar => m_Wrapper.m_MoverPersonaje_Reiniciar;
        public InputActionMap Get() { return m_Wrapper.m_MoverPersonaje; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MoverPersonajeActions set) { return set.Get(); }
        public void AddCallbacks(IMoverPersonajeActions instance)
        {
            if (instance == null || m_Wrapper.m_MoverPersonajeActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MoverPersonajeActionsCallbackInterfaces.Add(instance);
            @MoverPersonaje.started += instance.OnMoverPersonaje;
            @MoverPersonaje.performed += instance.OnMoverPersonaje;
            @MoverPersonaje.canceled += instance.OnMoverPersonaje;
            @Atacar.started += instance.OnAtacar;
            @Atacar.performed += instance.OnAtacar;
            @Atacar.canceled += instance.OnAtacar;
            @Reiniciar.started += instance.OnReiniciar;
            @Reiniciar.performed += instance.OnReiniciar;
            @Reiniciar.canceled += instance.OnReiniciar;
        }

        private void UnregisterCallbacks(IMoverPersonajeActions instance)
        {
            @MoverPersonaje.started -= instance.OnMoverPersonaje;
            @MoverPersonaje.performed -= instance.OnMoverPersonaje;
            @MoverPersonaje.canceled -= instance.OnMoverPersonaje;
            @Atacar.started -= instance.OnAtacar;
            @Atacar.performed -= instance.OnAtacar;
            @Atacar.canceled -= instance.OnAtacar;
            @Reiniciar.started -= instance.OnReiniciar;
            @Reiniciar.performed -= instance.OnReiniciar;
            @Reiniciar.canceled -= instance.OnReiniciar;
        }

        public void RemoveCallbacks(IMoverPersonajeActions instance)
        {
            if (m_Wrapper.m_MoverPersonajeActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMoverPersonajeActions instance)
        {
            foreach (var item in m_Wrapper.m_MoverPersonajeActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MoverPersonajeActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MoverPersonajeActions @MoverPersonaje => new MoverPersonajeActions(this);
    public interface IMoverPersonajeActions
    {
        void OnMoverPersonaje(InputAction.CallbackContext context);
        void OnAtacar(InputAction.CallbackContext context);
        void OnReiniciar(InputAction.CallbackContext context);
    }
}
